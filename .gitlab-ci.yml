image: 
  name: maven:3.8.6-eclipse-temurin-17

stages:         
  - build
  - publish

build-job:      
  stage: build
  script:
    - echo "Building inventory management "
    - CI=false mvn clean package
  artifacts:
    paths:
      - target/

docker-build-push-gitlab-ci:
  image: docker:latest
  stage: publish
  needs:
    - job: build-job
      artifacts: true
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  # Default branch leaves tag empty (= latest tag)
  # All other branches are tagged with the escaped branch name (commit ref slug)
  script:
    - echo "Build docker image and push to gitlab started"
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        tag=""
        echo "Running on default branch '$CI_DEFAULT_BRANCH': tag = 'latest'"
      else
        tag=":$CI_COMMIT_REF_SLUG"
        echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"
      fi
    - docker build --pull . -t "$CI_REGISTRY_IMAGE${tag}"
    - docker push "$CI_REGISTRY_IMAGE${tag}"
      # Run this job in a branch where a Dockerfile exists
  rules:
    - if: $CI_COMMIT_BRANCH
      exists:
        - Dockerfile

docker-build-push-acr:
  image: docker:latest
  stage: publish
  needs:
    - job: build-job
      artifacts: true
  services:
    - docker:dind
  before_script:
    - docker login imscr.azurecr.io -u imscr -p avJvQKz03w5N1yw/QQBbgM9unqZsRk0J
  script:
    - echo "Docker build and push image to ACR"
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        tag=""
        echo "Running on default branch '$CI_DEFAULT_BRANCH': tag = 'latest'"
      else
        tag=":$CI_COMMIT_REF_SLUG"
        echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"
      fi
    - docker build --pull . -t "$CI_REGISTRY_IMAGE${tag}"
    - docker tag "$CI_REGISTRY_IMAGE${tag}" imscr.azurecr.io/inventory-management${tag}
    - docker push imscr.azurecr.io/inventory-management${tag}
    - echo "success"
  rules:
    - if: $CI_COMMIT_BRANCH
      exists:
        - Dockerfile



#
#deploy-k8s:
#  image: mcr.microsoft.com/azure-cli:latest
#  stage: deploy-aks-cluster
#  environment: production
#  needs:
#    - job: docker-build
#  script:
#    - echo "Deploying application..."
#    - az
#    - az login --service-principal -u b27121f0-8d8b-4799-bd52-c792ffcaf2d8 -p .a38Q~jME52A~c~wmixd8xBf-Z5xgqyAr-cq8aDs --tenant 9d7e183d-ddb2-438b-a6da-4b92eb265c57
#    - az aks get-credentials --name myfirstcluster --resource-group practice
#    - kubectl
#    - az acr repository list -n myinventorycontainerregistry
#    - az acr build -r imscr -t "inventory/test:1" .
#    - docker login imscr.azurecr.io -u imscr -p avJvQKz03w5N1yw/QQBbgM9unqZsRk0J
#    - echo "successfully installed kubernetes"


#For reference https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Maven.gitlab-ci.yml








